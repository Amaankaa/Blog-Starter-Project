// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	blogpkg "github.com/Amaankaa/Blog-Starter-Project/Domain/blog"
	mock "github.com/stretchr/testify/mock"
)

// IBlogRepository is an autogenerated mock type for the IBlogRepository type
type IBlogRepository struct {
	mock.Mock
}

// CreateBlog provides a mock function with given fields: blog
func (_m *IBlogRepository) CreateBlog(blog *blogpkg.Blog) (*blogpkg.Blog, error) {
	ret := _m.Called(blog)

	if len(ret) == 0 {
		panic("no return value specified for CreateBlog")
	}

	var r0 *blogpkg.Blog
	var r1 error
	if rf, ok := ret.Get(0).(func(*blogpkg.Blog) (*blogpkg.Blog, error)); ok {
		return rf(blog)
	}
	if rf, ok := ret.Get(0).(func(*blogpkg.Blog) *blogpkg.Blog); ok {
		r0 = rf(blog)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*blogpkg.Blog)
		}
	}

	if rf, ok := ret.Get(1).(func(*blogpkg.Blog) error); ok {
		r1 = rf(blog)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIBlogRepository creates a new instance of IBlogRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIBlogRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *IBlogRepository {
	mock := &IBlogRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
